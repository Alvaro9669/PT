{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramir\\\\Documents\\\\CodigoPT\\\\PWeb\\\\virtual-store\\\\frontend\\\\src\\\\components\\\\PaypalButton.jsx\";\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalButton = ({\n  total\n}) => {\n  const initialOptions = {\n    \"client-id\": \"AW4xEijNfSBJiSYtmMdYrfi3hdsva55HqfU45shxQn0f_RM4WUc-dNdjmw_XZ2fIDPrbvqZQZBSy4fQn\",\n    // Reemplaza con tu Client ID\n    currency: \"MXN\"\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: initialOptions,\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: {\n        layout: \"vertical\"\n      },\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: total.toFixed(2) // Total del carrito\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        try {\n          const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/paypal/capture-order`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              orderId: data.orderID\n            })\n          });\n          if (!response.ok) {\n            const errorResult = await response.json();\n            alert(errorResult.message || 'Error al procesar el pago.');\n            return;\n          }\n          const result = await response.json();\n          console.log('Respuesta del backend:', result);\n          if (result.success) {\n            // Mostrar popup de éxito por 2 segundos\n            alert('Pago completado exitosamente');\n            setTimeout(() => {\n              // Redirigir al carrito después de 2 segundos\n              window.location.href = 'http://localhost:3000/carrito';\n            }, 2000);\n          } else {\n            alert(result.message || 'El pago no se completó.');\n          }\n        } catch (error) {\n          console.error('Error al capturar el pago:', error);\n          alert('Hubo un error al procesar el pago.');\n        }\n      },\n      onError: err => {\n        console.error('Error en el pago:', err);\n        alert('Hubo un error al procesar el pago.');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = PaypalButton;\nexport default PaypalButton;\nvar _c;\n$RefreshReg$(_c, \"PaypalButton\");","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","jsxDEV","_jsxDEV","PaypalButton","total","initialOptions","currency","options","children","style","layout","createOrder","data","actions","order","create","purchase_units","amount","value","toFixed","onApprove","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","orderId","orderID","ok","errorResult","json","alert","message","result","console","log","success","setTimeout","window","location","href","error","onError","err","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ramir/Documents/CodigoPT/PWeb/virtual-store/frontend/src/components/PaypalButton.jsx"],"sourcesContent":["import React from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst PaypalButton = ({ total }) => {\r\n    const initialOptions = {\r\n        \"client-id\": \"AW4xEijNfSBJiSYtmMdYrfi3hdsva55HqfU45shxQn0f_RM4WUc-dNdjmw_XZ2fIDPrbvqZQZBSy4fQn\", // Reemplaza con tu Client ID\r\n        currency: \"MXN\",\r\n    };\r\n\r\n    return (\r\n        <PayPalScriptProvider options={initialOptions}>\r\n            <PayPalButtons\r\n                style={{ layout: \"vertical\" }}\r\n                createOrder={(data, actions) => {\r\n                    return actions.order.create({\r\n                        purchase_units: [\r\n                            {\r\n                                amount: {\r\n                                    value: total.toFixed(2), // Total del carrito\r\n                                },\r\n                            },\r\n                        ],\r\n                    });\r\n                }}\r\n                onApprove={async (data, actions) => {\r\n                    try {\r\n                        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/paypal/capture-order`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify({ orderId: data.orderID }),\r\n                        });\r\n\r\n                        if (!response.ok) {\r\n                            const errorResult = await response.json();\r\n                            alert(errorResult.message || 'Error al procesar el pago.');\r\n                            return;\r\n                        }\r\n\r\n                        const result = await response.json();\r\n                        console.log('Respuesta del backend:', result);\r\n\r\n                        if (result.success) {\r\n                            // Mostrar popup de éxito por 2 segundos\r\n                            alert('Pago completado exitosamente');\r\n                            setTimeout(() => {\r\n                                // Redirigir al carrito después de 2 segundos\r\n                                window.location.href = 'http://localhost:3000/carrito';\r\n                            }, 2000);\r\n                        } else {\r\n                            alert(result.message || 'El pago no se completó.');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error al capturar el pago:', error);\r\n                        alert('Hubo un error al procesar el pago.');\r\n                    }\r\n                }}\r\n                onError={(err) => {\r\n                    console.error('Error en el pago:', err);\r\n                    alert('Hubo un error al procesar el pago.');\r\n                }}\r\n            />\r\n        </PayPalScriptProvider>\r\n    );\r\n};\r\n\r\nexport default PaypalButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAChC,MAAMC,cAAc,GAAG;IACnB,WAAW,EAAE,kFAAkF;IAAE;IACjGC,QAAQ,EAAE;EACd,CAAC;EAED,oBACIJ,OAAA,CAACH,oBAAoB;IAACQ,OAAO,EAAEF,cAAe;IAAAG,QAAA,eAC1CN,OAAA,CAACF,aAAa;MACVS,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAW,CAAE;MAC9BC,WAAW,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;QAC5B,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;UACxBC,cAAc,EAAE,CACZ;YACIC,MAAM,EAAE;cACJC,KAAK,EAAEd,KAAK,CAACe,OAAO,CAAC,CAAC,CAAC,CAAE;YAC7B;UACJ,CAAC;QAET,CAAC,CAAC;MACN,CAAE;MACFC,SAAS,EAAE,MAAAA,CAAOR,IAAI,EAAEC,OAAO,KAAK;QAChC,IAAI;UACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,2BAA2B,EAAE;YAC1FC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,OAAO,EAAEnB,IAAI,CAACoB;YAAQ,CAAC;UAClD,CAAC,CAAC;UAEF,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;YACd,MAAMC,WAAW,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;YACzCC,KAAK,CAACF,WAAW,CAACG,OAAO,IAAI,4BAA4B,CAAC;YAC1D;UACJ;UAEA,MAAMC,MAAM,GAAG,MAAMjB,QAAQ,CAACc,IAAI,CAAC,CAAC;UACpCI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,MAAM,CAAC;UAE7C,IAAIA,MAAM,CAACG,OAAO,EAAE;YAChB;YACAL,KAAK,CAAC,8BAA8B,CAAC;YACrCM,UAAU,CAAC,MAAM;cACb;cACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,+BAA+B;YAC1D,CAAC,EAAE,IAAI,CAAC;UACZ,CAAC,MAAM;YACHT,KAAK,CAACE,MAAM,CAACD,OAAO,IAAI,yBAAyB,CAAC;UACtD;QACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;UACZP,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDV,KAAK,CAAC,oCAAoC,CAAC;QAC/C;MACJ,CAAE;MACFW,OAAO,EAAGC,GAAG,IAAK;QACdT,OAAO,CAACO,KAAK,CAAC,mBAAmB,EAAEE,GAAG,CAAC;QACvCZ,KAAK,CAAC,oCAAoC,CAAC;MAC/C;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE/B,CAAC;AAACC,EAAA,GA9DIlD,YAAY;AAgElB,eAAeA,YAAY;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}