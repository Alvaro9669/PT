{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramir\\\\Documents\\\\CodigoPT\\\\PWeb\\\\virtual-store\\\\frontend\\\\src\\\\components\\\\DropdownMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './DropdownMenu.css'; // Asegúrate de tener un archivo CSS para los estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownMenu = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsOpen(!isOpen); // Alternar entre abierto y cerrado\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMenu,\n      className: \"menu-button\",\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Category 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Category 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Category 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(DropdownMenu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = DropdownMenu;\nexport default DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DropdownMenu","_s","isOpen","setIsOpen","toggleMenu","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ramir/Documents/CodigoPT/PWeb/virtual-store/frontend/src/components/DropdownMenu.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './DropdownMenu.css'; // Asegúrate de tener un archivo CSS para los estilos\n\nconst DropdownMenu = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen); // Alternar entre abierto y cerrado\n    };\n\n    return (\n        <div className=\"dropdown-menu\">\n            <button onClick={toggleMenu} className=\"menu-button\">\n                Menu\n            </button>\n            {isOpen && (\n                <ul className=\"dropdown-list\">\n                    <li>Category 1</li>\n                    <li>Category 2</li>\n                    <li>Category 3</li>\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default DropdownMenu;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACrBD,SAAS,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACIH,OAAA;IAAKM,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BP,OAAA;MAAQQ,OAAO,EAAEH,UAAW;MAACC,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRT,MAAM,iBACHH,OAAA;MAAIM,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACzBP,OAAA;QAAAO,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBZ,OAAA;QAAAO,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBZ,OAAA;QAAAO,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACV,EAAA,CArBID,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}