{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramir\\\\Documents\\\\CodigoPT\\\\PWeb\\\\virtual-store\\\\frontend\\\\src\\\\components\\\\PaypalButton.jsx\";\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalButton = ({\n  total\n}) => {\n  const initialOptions = {\n    \"client-id\": \"AW4xEijNfSBJiSYtmMdYrfi3hdsva55HqfU45shxQn0f_RM4WUc-dNdjmw_XZ2fIDPrbvqZQZBSy4fQn\",\n    // Reemplaza con tu Client ID\n    currency: \"MX\"\n  };\n  // El valor total se pasa como prop al componente PaypalButton\n  // Puedes cambiar la moneda a la que necesites, por ejemplo: \"EUR\", \"MXN\", etc.\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: initialOptions,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"paypal-button-container\",\n      children: /*#__PURE__*/_jsxDEV(PayPalButtons\n      // Estilo del botón de PayPal\n      , {\n        style: {\n          layout: \"vertical\",\n          shape: \"rect\",\n          label: \"paypal\",\n          height: 40\n        },\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [{\n              amount: {\n                value: total.toFixed(2) // Total del carrito\n              }\n            }]\n          });\n        }\n        // Función que se ejecuta al aprobar el pago\n        // Aquí puedes manejar la lógica después de que el pago se haya completado\n        ,\n        onApprove: (data, actions) => {\n          return actions.order.capture().then(details => {\n            alert(`Pago completado por ${details.payer.name.given_name}`);\n          });\n        },\n        onError: err => {\n          console.error(\"Error en el pago:\", err);\n          alert(\"Hubo un error al procesar el pago.\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = PaypalButton;\nexport default PaypalButton;\nvar _c;\n$RefreshReg$(_c, \"PaypalButton\");","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","jsxDEV","_jsxDEV","PaypalButton","total","initialOptions","currency","options","children","id","style","layout","shape","label","height","createOrder","data","actions","order","create","purchase_units","amount","value","toFixed","onApprove","capture","then","details","alert","payer","name","given_name","onError","err","console","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ramir/Documents/CodigoPT/PWeb/virtual-store/frontend/src/components/PaypalButton.jsx"],"sourcesContent":["import React from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst PaypalButton = ({ total }) => {\r\n    const initialOptions = {\r\n        \"client-id\": \"AW4xEijNfSBJiSYtmMdYrfi3hdsva55HqfU45shxQn0f_RM4WUc-dNdjmw_XZ2fIDPrbvqZQZBSy4fQn\", // Reemplaza con tu Client ID\r\n        currency: \"MX\",\r\n    };\r\n    // El valor total se pasa como prop al componente PaypalButton\r\n    // Puedes cambiar la moneda a la que necesites, por ejemplo: \"EUR\", \"MXN\", etc.\r\n    return (\r\n        <PayPalScriptProvider options={initialOptions}>\r\n            <div id=\"paypal-button-container\">\r\n                <PayPalButtons\r\n                // Estilo del botón de PayPal\r\n                    style={{ layout: \"vertical\",\r\n                        shape: \"rect\",\r\n                        label: \"paypal\",\r\n                        height: 40, }}\r\n                    createOrder={(data, actions) => {\r\n                        return actions.order.create({\r\n                            purchase_units: [\r\n                                {\r\n                                    amount: {\r\n                                        value: total.toFixed(2), // Total del carrito\r\n                                    },\r\n                                },\r\n                            ],\r\n                        });\r\n                    }}\r\n                    // Función que se ejecuta al aprobar el pago\r\n                    // Aquí puedes manejar la lógica después de que el pago se haya completado\r\n                    onApprove={(data, actions) => {\r\n                        return actions.order.capture().then((details) => {\r\n                            alert(`Pago completado por ${details.payer.name.given_name}`);\r\n                        });\r\n                    }}\r\n                    onError={(err) => {\r\n                        console.error(\"Error en el pago:\", err);\r\n                        alert(\"Hubo un error al procesar el pago.\");\r\n                    }}\r\n                />\r\n            </div>\r\n        </PayPalScriptProvider>\r\n    );\r\n};\r\n\r\nexport default PaypalButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAChC,MAAMC,cAAc,GAAG;IACnB,WAAW,EAAE,kFAAkF;IAAE;IACjGC,QAAQ,EAAE;EACd,CAAC;EACD;EACA;EACA,oBACIJ,OAAA,CAACH,oBAAoB;IAACQ,OAAO,EAAEF,cAAe;IAAAG,QAAA,eAC1CN,OAAA;MAAKO,EAAE,EAAC,yBAAyB;MAAAD,QAAA,eAC7BN,OAAA,CAACF;MACD;MAAA;QACIU,KAAK,EAAE;UAAEC,MAAM,EAAE,UAAU;UACvBC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE,QAAQ;UACfC,MAAM,EAAE;QAAI,CAAE;QAClBC,WAAW,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;UAC5B,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;YACxBC,cAAc,EAAE,CACZ;cACIC,MAAM,EAAE;gBACJC,KAAK,EAAElB,KAAK,CAACmB,OAAO,CAAC,CAAC,CAAC,CAAE;cAC7B;YACJ,CAAC;UAET,CAAC,CAAC;QACN;QACA;QACA;QAAA;QACAC,SAAS,EAAEA,CAACR,IAAI,EAAEC,OAAO,KAAK;UAC1B,OAAOA,OAAO,CAACC,KAAK,CAACO,OAAO,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;YAC7CC,KAAK,CAAC,uBAAuBD,OAAO,CAACE,KAAK,CAACC,IAAI,CAACC,UAAU,EAAE,CAAC;UACjE,CAAC,CAAC;QACN,CAAE;QACFC,OAAO,EAAGC,GAAG,IAAK;UACdC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;UACvCL,KAAK,CAAC,oCAAoC,CAAC;QAC/C;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE/B,CAAC;AAACC,EAAA,GA1CIrC,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}